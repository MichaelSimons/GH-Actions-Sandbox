name: Docker Image CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:

  linux-build:

    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    # - name: Cache Docker layers
    #   uses: actions/cache@v2
    #   with:
    #     path: /tmp/.buildx-cache
    #     key: ${{ runner.os }}-buildx-${{ github.sha }}
    #     restore-keys: |
    #       ${{ runner.os }}-buildx-

    - name: Check cached images
      run: docker images --digest

    - name: Build the Docker image
      run: docker build src/dotnetapp --file src/dotnetapp/Dockerfile --tag my-image-name:$(date +%s)

      # - name: Build and push
      #   uses: docker/build-push-action@v2
      #   with:
      #     context: .
      #     push: false
      #     tags: user/app:latest
      #     cache-from: type=local,src=/tmp/.buildx-cache
      #     cache-to: type=local,dest=/tmp/.buildx-cache-new
      #   # This ugly bit is necessary if you don't want your cache to grow forever
      #   # till it hits GitHub's limit of 5GB.
      #   # Temp fix
      #   # https://github.com/docker/build-push-action/issues/252
      #   # https://github.com/moby/buildkit/issues/1896
      # - name: Move cache
      #   run: |
      #     rm -rf /tmp/.buildx-cache
      #     mv /tmp/.buildx-cache-new /tmp/.buildx-cache

  windows-build:

    runs-on: windows-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Check cached images
      run: docker images --digest

    - name: Build the Docker image
      run: docker build src/dotnetapp --file src/dotnetapp/Dockerfile --tag my-image-name:$(date +%s)
